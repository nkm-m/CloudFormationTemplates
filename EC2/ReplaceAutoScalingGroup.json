{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "Ec2ImageId": {
      "Description": "Enter the latest AMI ID",
      "Type": "AWS::EC2::Image::Id",
      "ConstraintDescription": "The input value is incorrect"
    }
  },
  "Resources": {
    "LaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateName": "LaunchTemplate",
        "LaunchTemplateData": {
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "<script>\n",
                  "cfn-init.exe -v -s ",
                  {
                    "Ref": "AWS::StackId"
                  },
                  " -r AutoScalingGroup",
                  " --configsets HealthCheck",
                  " --region ",
                  {
                    "Ref": "AWS::Region"
                  },
                  "\n",
                  "cfn-signal.exe -e %ERRORLEVEL% --stack ",
                  {
                    "Ref": "AWS::StackId"
                  },
                  " --resource AutoScalingGroup --region ",
                  {
                    "Ref": "AWS::Region"
                  },
                  " --success true",
                  "\n",
                  "</script>",
                  "<persist>true</persist>"
                ]
              ]
            }
          },
          "IamInstanceProfile": {
            "Name": "<IAM Role Name For EC2>"
          },
          "DisableApiTermination": "false",
          "ImageId": {
            "Ref": "Ec2ImageId"
          },
          "InstanceType": "t2.micro",
          "NetworkInterfaces": [
            {
              "AssociatePublicIpAddress": "false",
              "DeleteOnTermination": "true",
              "DeviceIndex": 0,
              "Groups": ["<sg-id>"]
            }
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Study"
                }
              ]
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Study"
                }
              ]
            }
          ]
        }
      }
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "HealthCheck": ["verify_instance_health"]
          },
          "verify_instance_health": {
            "files": {
              "C:\\cfn\\healthcheck.ps1": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[Console]::OutputEncoding = [System.Text.Encoding]::UTF8",
                      "\n",
                      "$data = Invoke-WebRequest http://169.254.169.254/latest/meta-data/instance-id -UseBasicParsing",
                      "\n",
                      "$id = $data.Content",
                      "\n",
                      "$state = Get-ELB2TargetHealth -TargetGroupArn <Target Group ARN> -Target @{Id=$id} -Select TargetHealthDescriptions.TargetHealth.State",
                      "\n",
                      "echo $state >> C:\\cfn\\state.log",
                      "\n",
                      "while ($state -ne \"healthy\") {",
                      "$state = Get-ELB2TargetHealth -TargetGroupArn <Target Group ARN> -Target @{Id=$id} -Select TargetHealthDescriptions.TargetHealth.State",
                      "\n",
                      "echo $state >> C:\\cfn\\state.log",
                      "\n",
                      "Start-Sleep -s 10",
                      "\n",
                      "}",
                      "\n",
                      "echo \"done\" >> C:\\cfn\\state.log"
                    ]
                  ]
                }
              }
            },
            "commands": {
              "ELBHealthCheck": {
                "command": "powershell.exe -ExecutionPolicy Bypass C:\\cfn\\healthcheck.ps1",
                "waitAfterCompletion": 0
              }
            }
          }
        }
      },
      "Properties": {
        "AvailabilityZones": [
          "ap-northeast-1a",
          "ap-northeast-1c",
          "ap-northeast-1d"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": 300,
        "HealthCheckType": "ELB",
        "LaunchTemplate": {
          "LaunchTemplateName": "LaunchTemplate",
          "Version": {
            "Fn::GetAtt": ["LaunchTemplate", "LatestVersionNumber"]
          }
        },
        "MaxSize": "1",
        "MinSize": "1",
        "TargetGroupARNs": ["<Target Group ARN>"],
        "TerminationPolicies": ["OldestInstance"],
        "VPCZoneIdentifier": ["<subnet-id1>", "<subnet-id2>", "<subnet-id3>"],
        "NotificationConfigurations": [
          {
            "TopicARN": "<SNS Topic ARN>",
            "NotificationTypes": [
              "autoscaling:EC2_INSTANCE_LAUNCH",
              "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
              "autoscaling:EC2_INSTANCE_TERMINATE",
              "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
            ]
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute"
          }
        ],
        "LifecycleHookSpecificationList": [
          {
            "DefaultResult": "CONTINUE",
            "HeartbeatTimeout": 300,
            "LifecycleHookName": "LaunchingHook_BeforeRegisterWithAlb",
            "LifecycleTransition": "autoscaling:EC2_INSTANCE_LAUNCHING"
          },
          {
            "DefaultResult": "CONTINUE",
            "HeartbeatTimeout": 1800,
            "LifecycleHookName": "TerminatingHook_CreateImage",
            "LifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingReplacingUpdate": {
          "WillReplace": "true"
        }
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": 1,
          "Timeout": "PT15M"
        }
      }
    },
    "CPUUtilizationAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "EC2CPUUtilizationAlarm",
        "Namespace": "AWS/EC2",
        "AlarmActions": ["<SNS Topic ARN>"],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "AutoScalingGroup"
            }
          }
        ],
        "MetricName": "CPUUtilization",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Period": 60,
        "EvaluationPeriods": 1,
        "Statistic": "Maximum",
        "Threshold": 80,
        "TreatMissingData": "notBreaching"
      }
    }
  }
}
